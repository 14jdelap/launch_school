continue
sum
n
sum
n
continue
n
sum
values
n
values
sum
n
sum
n
sum
n
sum
hand
continue
sum
n
values
n
sum
hand
exit
continue
hand
sum
n
sum
hand << :ace
hand
continue
sum
n
sum
n
sum
n
sum
n
sum
n
sum
n
sum
n
sum
n
sum
n
sum
values
n
hand
values
n
sum
n
sum
n
values
n
deck
hand << :ace
hand
continue
sum
n
hand << :ace
hand
n
deck
n
deck
n
deck
n
player_hand
n
winner
n
winner
n
player_hand
n
h
n
deck
n
computer_wins
player_wins
n
winner
n
s
n
player_hand
n
player_hand
deck
n
continue
deck
n
deck
deck[selected_card] = 0
deck
selected_card
continue
n
computer_hand
continue
n
computer_hand
continue
n
prompt(format(MESSAGES["player_win"], computer_points: count_points(computer_hand), player_points: count_points(player_hand)))
prompt(format(MESSAGES["computer_win"], computer_points: count_points(computer_hand),
n
count_points(player_hand) <=> count_points(computer_hand)
computer_hand
n
count_points(player_hand) <=> count_points(computer_hand)
n
busted?(player_hand)
player_hand
continue
prompt(format(MESSAGES["busted"], participant: "You're ")) if busted?(hand)
busted?(player_hand)
count_points(player_hand)
player_busted?(player_hand)
player_hand
n
sum
n
sum
n
sum
n
sum
n
continue
sum
n
values
n
sum
n
sum
n
sum + 11 > 21
sum
n
values
n
hand
sum
continue
add_ace([:ace, :ace], 11)
(1..hand.count(:ace))
hand.count(:ace)
n
sum
n
sum
n
hand.count(:ace)
and.count(:ace)
hand
continue
sum
n
acc + 0
value.class == Integer
vale.class == Integer
n
value
acc
n
value.class == Integer
value.class
value
values
value
acc
hand
player_hand == hand
